import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import BackButton from '../components/BackButton';

export default function ContractsPage() {
  const [contracts, setContracts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [filter, setFilter] = useState('all');
  const [searchTerm, setSearchTerm] = useState('');

  // Mock contract data
  const mockContracts = [
    {
      _id: '1',
      contractNumber: 'CON-2024-001',
      requestId: 'REQ-001',
      customerName: 'Nguy·ªÖn VƒÉn A',
      customerPhone: '0123456789',
      serviceType: 'Chuy·ªÉn nh√† n·ªôi th√†nh',
      status: 'DRAFT',
      totalAmount: 2500000,
      createdAt: '2024-01-10T10:00:00Z',
      address: {
        from: '123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM',
        to: '456 ƒê∆∞·ªùng XYZ, Qu·∫≠n 3, TP.HCM'
      },
      movingDate: '2024-01-15T08:00:00Z'
    },
    {
      _id: '2',
      contractNumber: 'CON-2024-002',
      requestId: 'REQ-002',
      customerName: 'Tr·∫ßn Th·ªã B',
      customerPhone: '0987654321',
      serviceType: 'Chuy·ªÉn nh√† li√™n t·ªânh',
      status: 'ISSUED',
      totalAmount: 5000000,
      createdAt: '2024-01-12T14:30:00Z',
      address: {
        from: '789 ƒê∆∞·ªùng DEF, Qu·∫≠n 2, TP.HCM',
        to: '321 ƒê∆∞·ªùng GHI, Qu·∫≠n 7, TP.HCM'
      },
      movingDate: '2024-01-20T09:00:00Z'
    },
    {
      _id: '3',
      contractNumber: 'CON-2024-003',
      requestId: 'REQ-003',
      customerName: 'L√™ VƒÉn C',
      customerPhone: '0555666777',
      serviceType: 'Chuy·ªÉn vƒÉn ph√≤ng',
      status: 'ACCEPTED',
      totalAmount: 8000000,
      createdAt: '2024-01-14T16:45:00Z',
      address: {
        from: '555 ƒê∆∞·ªùng JKL, Qu·∫≠n 4, TP.HCM',
        to: '777 ƒê∆∞·ªùng MNO, Qu·∫≠n 5, TP.HCM'
      },
      movingDate: '2024-01-25T10:00:00Z'
    }
  ];

  useEffect(() => {
    // Simulate API call
    setTimeout(() => {
      setContracts(mockContracts);
      setLoading(false);
    }, 1000);
  }, []);

  const getStatusColor = (status) => {
    switch (status) {
      case 'DRAFT': return 'bg-gray-100 text-gray-800';
      case 'ISSUED': return 'bg-blue-100 text-blue-800';
      case 'ACCEPTED': return 'bg-green-100 text-green-800';
      case 'REJECTED': return 'bg-red-100 text-red-800';
      case 'CANCELLED': return 'bg-yellow-100 text-yellow-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const getStatusText = (status) => {
    switch (status) {
      case 'DRAFT': return 'Nh√°p';
      case 'ISSUED': return 'ƒê√£ ph√°t h√†nh';
      case 'ACCEPTED': return 'ƒê√£ ch·∫•p nh·∫≠n';
      case 'REJECTED': return 'ƒê√£ t·ª´ ch·ªëi';
      case 'CANCELLED': return 'ƒê√£ h·ªßy';
      default: return status;
    }
  };

  const filteredContracts = contracts.filter(contract => {
    const matchesFilter = filter === 'all' || contract.status === filter;
    const matchesSearch = !searchTerm || 
      contract.contractNumber.toLowerCase().includes(searchTerm.toLowerCase()) ||
      contract.customerName.toLowerCase().includes(searchTerm.toLowerCase()) ||
      contract.customerPhone.includes(searchTerm);
    return matchesFilter && matchesSearch;
  });

  const formatCurrency = (amount) => {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(amount);
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleDateString('vi-VN');
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-96">
        <div className="w-8 h-8 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin" />
        <span className="ml-3 text-gray-600">ƒêang t·∫£i h·ª£p ƒë·ªìng...</span>
      </div>
    );
  }

  return (
    <div className="space-y-8">
      <BackButton fallbackPath="/" />
      
      {/* Header */}
      <div className="text-center">
        <h1 className="text-4xl font-bold text-gray-900 mb-4">
          üìÑ Qu·∫£n l√Ω h·ª£p ƒë·ªìng
        </h1>
        <p className="text-xl text-gray-600 max-w-2xl mx-auto">
          Xem v√† qu·∫£n l√Ω c√°c h·ª£p ƒë·ªìng d·ªãch v·ª• chuy·ªÉn nh√†
        </p>
      </div>

      {/* Stats Cards */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-100">
          <div className="flex items-center">
            <div className="p-3 bg-blue-100 rounded-lg">
              <span className="text-blue-600 text-xl">üìÑ</span>
            </div>
            <div className="ml-4">
              <p className="text-sm font-medium text-gray-600">T·ªïng h·ª£p ƒë·ªìng</p>
              <p className="text-2xl font-bold text-gray-900">{contracts.length}</p>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-100">
          <div className="flex items-center">
            <div className="p-3 bg-green-100 rounded-lg">
              <span className="text-green-600 text-xl">‚úÖ</span>
            </div>
            <div className="ml-4">
              <p className="text-sm font-medium text-gray-600">ƒê√£ ch·∫•p nh·∫≠n</p>
              <p className="text-2xl font-bold text-gray-900">
                {contracts.filter(c => c.status === 'ACCEPTED').length}
              </p>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-100">
          <div className="flex items-center">
            <div className="p-3 bg-yellow-100 rounded-lg">
              <span className="text-yellow-600 text-xl">‚è≥</span>
            </div>
            <div className="ml-4">
              <p className="text-sm font-medium text-gray-600">Ch·ªù x·ª≠ l√Ω</p>
              <p className="text-2xl font-bold text-gray-900">
                {contracts.filter(c => ['DRAFT', 'ISSUED'].includes(c.status)).length}
              </p>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-100">
          <div className="flex items-center">
            <div className="p-3 bg-purple-100 rounded-lg">
              <span className="text-purple-600 text-xl">üí∞</span>
            </div>
            <div className="ml-4">
              <p className="text-sm font-medium text-gray-600">T·ªïng gi√° tr·ªã</p>
              <p className="text-2xl font-bold text-gray-900">
                {formatCurrency(contracts.reduce((sum, c) => sum + c.totalAmount, 0))}
              </p>
            </div>
          </div>
        </div>
      </div>

      {/* Filters */}
      <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-100">
        <div className="flex flex-col md:flex-row gap-4">
          <div className="flex-1">
            <div className="relative">
              <span className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400">üîç</span>
              <input
                type="text"
                placeholder="T√¨m ki·∫øm theo s·ªë h·ª£p ƒë·ªìng, t√™n kh√°ch h√†ng..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>
          </div>
          <div className="flex items-center space-x-2">
            <span className="text-gray-400">üîΩ</span>
            <select
              value={filter}
              onChange={(e) => setFilter(e.target.value)}
              className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
              <option value="all">T·∫•t c·∫£ tr·∫°ng th√°i</option>
              <option value="DRAFT">Nh√°p</option>
              <option value="ISSUED">ƒê√£ ph√°t h√†nh</option>
              <option value="ACCEPTED">ƒê√£ ch·∫•p nh·∫≠n</option>
              <option value="REJECTED">ƒê√£ t·ª´ ch·ªëi</option>
              <option value="CANCELLED">ƒê√£ h·ªßy</option>
            </select>
          </div>
        </div>
      </div>

      {/* Contracts List */}
      <div className="space-y-6">
        {filteredContracts.length === 0 ? (
          <div className="text-center py-12">
            <div className="text-gray-500 text-lg mb-4">
              {searchTerm || filter !== "all" 
                ? "Kh√¥ng t√¨m th·∫•y h·ª£p ƒë·ªìng ph√π h·ª£p v·ªõi b·ªô l·ªçc" 
                : "Ch∆∞a c√≥ h·ª£p ƒë·ªìng n√†o"
              }
            </div>
            <p className="text-gray-400">
              {searchTerm || filter !== "all" 
                ? "H√£y th·ª≠ thay ƒë·ªïi t·ª´ kh√≥a t√¨m ki·∫øm ho·∫∑c b·ªô l·ªçc" 
                : "H·ª£p ƒë·ªìng s·∫Ω ƒë∆∞·ª£c t·∫°o khi c√≥ y√™u c·∫ßu chuy·ªÉn nh√† ƒë∆∞·ª£c duy·ªát"
              }
            </p>
          </div>
        ) : (
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {filteredContracts.map((contract) => (
              <div key={contract._id} className="bg-white rounded-xl p-6 shadow-lg border border-gray-100 hover:shadow-xl transition-shadow">
                <div className="flex justify-between items-start mb-4">
                  <div>
                    <h3 className="text-lg font-semibold text-gray-900">
                      {contract.contractNumber}
                    </h3>
                    <p className="text-sm text-gray-600">
                      Y√™u c·∫ßu: {contract.requestId}
                    </p>
                  </div>
                  <span className={`px-3 py-1 rounded-full text-xs font-medium ${getStatusColor(contract.status)}`}>
                    {getStatusText(contract.status)}
                  </span>
                </div>

                <div className="space-y-3 mb-4">
                  <div className="flex justify-between">
                    <span className="text-gray-600">Kh√°ch h√†ng:</span>
                    <span className="font-medium">{contract.customerName}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">SƒêT:</span>
                    <span className="font-medium">{contract.customerPhone}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">D·ªãch v·ª•:</span>
                    <span className="font-medium">{contract.serviceType}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">Ng√†y chuy·ªÉn:</span>
                    <span className="font-medium">{formatDate(contract.movingDate)}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">T·ªïng ti·ªÅn:</span>
                    <span className="font-bold text-green-600">{formatCurrency(contract.totalAmount)}</span>
                  </div>
                </div>

                <div className="border-t pt-4">
                  <div className="text-sm text-gray-600 mb-2">
                    <strong>T·ª´:</strong> {contract.address.from}
                  </div>
                  <div className="text-sm text-gray-600 mb-4">
                    <strong>ƒê·∫øn:</strong> {contract.address.to}
                  </div>
                  
                  <div className="flex gap-2">
                    <button className="flex-1 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors text-sm">
                      Xem chi ti·∫øt
                    </button>
                    {contract.status === 'DRAFT' && (
                      <button className="flex-1 bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors text-sm">
                        Ph√°t h√†nh
                      </button>
                    )}
                    {contract.status === 'ISSUED' && (
                      <button className="flex-1 bg-yellow-600 text-white px-4 py-2 rounded-lg hover:bg-yellow-700 transition-colors text-sm">
                        Ch·∫•p nh·∫≠n
                      </button>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>

      {/* Quick Actions */}
      <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-100">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">H√†nh ƒë·ªông nhanh</h3>
        <div className="flex gap-4 flex-wrap">
          <Link to="/requests" className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors">
            üìã Xem y√™u c·∫ßu
          </Link>
          <Link to="/dashboard" className="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors">
            üìä B√°o c√°o
          </Link>
          <button className="bg-purple-600 text-white px-6 py-2 rounded-lg hover:bg-purple-700 transition-colors">
            üìÑ T·∫°o h·ª£p ƒë·ªìng m·ªõi
          </button>
        </div>
      </div>
    </div>
  );
}
